cpu  := "https://raw.githubusercontent.com/Next-MICON/packages/main/cpu/cpu.json";
fpga := "https://raw.githubusercontent.com/Next-MICON/packages/main/fpga/fpga.json";

// IO
gpio := "https://raw.githubusercontent.com/Next-MICON/packages/main/gpio/gpio.json";
uart := "https://raw.githubusercontent.com/Next-MICON/packages/main/uart/uart.json";
pwm := "https://raw.githubusercontent.com/Next-MICON/packages/main/pwm/pwm.json";
selector := "https://raw.githubusercontent.com/Next-MICON/packages/main/selector/selector.json";

cpu.irq5 <= fpga.pin11;

serial = uart(uart,UART);
serial.tx => fpga.pin1;
serial.rx <= fpga.pin2;

gpio = gpio(gpio,GPIO);
gpio.io_out => sel.in0;

pwm = pwm(pwm,PWM);
pwm.out => sel.in1;

sel = selector(selector,Selector);
sel.out => fpga.user_led;

// 音生成回路

music   := "https://raw.githubusercontent.com/Next-MICON/packages/main/music/music.json";
counter := "https://raw.githubusercontent.com/Next-MICON/packages/main/counter/counter.json";

square1  = music(osc_square,  Oscilator);
square2  = music(osc_square,  Oscilator);
square3  = music(osc_square,  Oscilator);
sawtooth = music(osc_sawtooth,Oscilator);
triangle = music(osc_triangle,Oscilator);

mixier.ch0 <=(8)= square1.out;
mixier.ch1 <=(8)= square2.out;
mixier.ch2 <=(8)= square3.out;
mixier.ch3 <=(8)= sawtooth.out;
mixier.ch4 <=(8)= triangle.out;

mixier = music(mixier,Mixier);

dac.analog <=(12)= mixier.out;

sampling = counter(counter,Counter);

dac.sample <= sampling.overflow;

dac = music(spidac,SPIDAC);

dac.cs => fpga.pin24;
dac.scl => fpga.pin23;
dac.sdi => fpga.pin22;
dac.ldac => fpga.pin21;
